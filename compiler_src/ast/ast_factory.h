#ifndef ASTFACT_H
#define ASTFACT_H
#include "ast_base.h"
extern ast_base* new_ast_INT(int l,int v);
extern ast_base* new_ast_FLOAT(int l,float v);
extern ast_base* new_ast_ID(int l,char* v);
extern ast_base* new_ast_SEMI(int l);
extern ast_base* new_ast_COMMA(int l);
extern ast_base* new_ast_ASSIGNOP(int l);
extern ast_base* new_ast_RELOP_GT(int l);
extern ast_base* new_ast_RELOP_LT(int l);
extern ast_base* new_ast_RELOP_GE(int l);
extern ast_base* new_ast_RELOP_LE(int l);
extern ast_base* new_ast_RELOP_EQ(int l);
extern ast_base* new_ast_RELOP_NE(int l);
extern ast_base* new_ast_PLUS(int l);
extern ast_base* new_ast_MINUS(int l);
extern ast_base* new_ast_STAR(int l);
extern ast_base* new_ast_DIV(int l);
extern ast_base* new_ast_AND(int l);
extern ast_base* new_ast_OR(int l);
extern ast_base* new_ast_DOT(int l);
extern ast_base* new_ast_NOT(int l);
extern ast_base* new_ast_TYPE_INT(int l);
extern ast_base* new_ast_TYPE_FLOAT(int l);
extern ast_base* new_ast_LP(int l);
extern ast_base* new_ast_RP(int l);
extern ast_base* new_ast_LB(int l);
extern ast_base* new_ast_RB(int l);
extern ast_base* new_ast_LC(int l);
extern ast_base* new_ast_RC(int l);
extern ast_base* new_ast_STRUCT(int l);
extern ast_base* new_ast_RETURN(int l);
extern ast_base* new_ast_IF(int l);
extern ast_base* new_ast_ELSE(int l);
extern ast_base* new_ast_WHILE(int l);
extern ast_base* new_ast_Program(int l,ast_base* ExtDefList);
extern ast_base* new_ast_ExtDefList(int l,ast_base* ExtDef,ast_base* ExtDefList);
extern ast_base* new_ast_ExtDef_Var(int l,ast_base* Specifier,ast_base* ExtDecList,ast_base* SEMI);
extern ast_base* new_ast_ExtDef_MayStruct(int l,ast_base* Specifier,ast_base* SEMI);
extern ast_base* new_ast_ExtDef_Fn(int l,ast_base* Specifier,ast_base* FunDec,ast_base* CompSt);
extern ast_base* new_ast_ExtDecList_0(int l,ast_base* VarDec,ast_base* COMMA,ast_base* ExtDecList);
extern ast_base* new_ast_ExtDecList_1(int l,ast_base* VarDec);
extern ast_base* new_ast_Specifier_Ty(int l,ast_base* TYPE);
extern ast_base* new_ast_Specifier_Struct(int l,ast_base* StructSpecifier);
extern ast_base* new_ast_StructSpecifier_Ref(int l,ast_base* STRUCT,ast_base* Tag);
extern ast_base* new_ast_StructSpecifier_Def(int l,ast_base* STRUCT,ast_base* OptTag,ast_base* LC,ast_base* DefList,ast_base* RC);
extern ast_base* new_ast_OptTag(int l,ast_base* ID);
extern ast_base* new_ast_Tag(int l,ast_base* ID);
extern ast_base* new_ast_VarDec_Var(int l,ast_base* ID);
extern ast_base* new_ast_VarDec_Array(int l,ast_base* VarDec,ast_base* LB,ast_base* INT,ast_base* RB);
extern ast_base* new_ast_FunDec_HasArg(int l,ast_base* ID,ast_base* LP,ast_base* VarList,ast_base* RP);
extern ast_base* new_ast_FunDec_NoArg(int l,ast_base* ID,ast_base* LP,ast_base* RP);
extern ast_base* new_ast_VarList_0(int l,ast_base* ParamDec,ast_base* COMMA,ast_base* VarList);
extern ast_base* new_ast_VarList_1(int l,ast_base* ParamDec);
extern ast_base* new_ast_ParamDec(int l,ast_base* Specifier,ast_base* VarDec);
extern ast_base* new_ast_CompSt(int l,ast_base* LC,ast_base* DefList,ast_base* StmtList,ast_base* RC);
extern ast_base* new_ast_StmtList(int l,ast_base* Stmt,ast_base* StmtList);
extern ast_base* new_ast_Stmt_Expr(int l,ast_base* Exp,ast_base* SEMI);
extern ast_base* new_ast_Stmt_Comp(int l,ast_base* CompSt);
extern ast_base* new_ast_Stmt_Ret(int l,ast_base* RETURN,ast_base* Exp,ast_base* SEMI);
extern ast_base* new_ast_Stmt_If(int l,ast_base* IF,ast_base* LP,ast_base* Exp,ast_base* RP,ast_base* Stmt);
extern ast_base* new_ast_Stmt_Ife(int l,ast_base* IF,ast_base* LP,ast_base* Exp,ast_base* RP,ast_base* Stmt,ast_base* ELSE,ast_base* Stmt1);
extern ast_base* new_ast_Stmt_While(int l,ast_base* WHILE,ast_base* LP,ast_base* Exp,ast_base* RP,ast_base* Stmt);
extern ast_base* new_ast_DefList(int l,ast_base* Def,ast_base* DefList);
extern ast_base* new_ast_Def(int l,ast_base* Specifier,ast_base* DecList,ast_base* SEMI);
extern ast_base* new_ast_DecList_0(int l,ast_base* Dec,ast_base* COMMA,ast_base* DecList);
extern ast_base* new_ast_DecList_1(int l,ast_base* Dec);
extern ast_base* new_ast_Dec_Simple(int l,ast_base* VarDec);
extern ast_base* new_ast_Dec_WithInit(int l,ast_base* VarDec,ast_base* ASSIGNOP,ast_base* Exp);
extern ast_base* new_ast_Exp_Assign(int l,ast_base* Exp,ast_base* ASSIGNOP,ast_base* Exp1);
extern ast_base* new_ast_Exp_And(int l,ast_base* Exp,ast_base* AND,ast_base* Exp1);
extern ast_base* new_ast_Exp_Or(int l,ast_base* Exp,ast_base* OR,ast_base* Exp1);
extern ast_base* new_ast_Exp_Rel(int l,ast_base* Exp,ast_base* RELOP,ast_base* Exp1);
extern ast_base* new_ast_Exp_Plus(int l,ast_base* Exp,ast_base* PLUS,ast_base* Exp1);
extern ast_base* new_ast_Exp_Minus(int l,ast_base* Exp,ast_base* MINUS,ast_base* Exp1);
extern ast_base* new_ast_Exp_Mul(int l,ast_base* Exp,ast_base* STAR,ast_base* Exp1);
extern ast_base* new_ast_Exp_Div(int l,ast_base* Exp,ast_base* DIV,ast_base* Exp1);
extern ast_base* new_ast_Exp_P(int l,ast_base* LP,ast_base* Exp,ast_base* RP);
extern ast_base* new_ast_Exp_Neg(int l,ast_base* MINUS,ast_base* Exp);
extern ast_base* new_ast_Exp_Not(int l,ast_base* NOT,ast_base* Exp);
extern ast_base* new_ast_Exp_Call(int l,ast_base* ID,ast_base* LP,ast_base* Args,ast_base* RP);
extern ast_base* new_ast_Exp_CallV(int l,ast_base* ID,ast_base* LP,ast_base* RP);
extern ast_base* new_ast_Exp_Arr(int l,ast_base* Exp,ast_base* LB,ast_base* Exp1,ast_base* RB);
extern ast_base* new_ast_Exp_Fld(int l,ast_base* Exp,ast_base* DOT,ast_base* ID);
extern ast_base* new_ast_Exp_Var(int l,ast_base* ID);
extern ast_base* new_ast_Exp_Int(int l,ast_base* INT);
extern ast_base* new_ast_Exp_Float(int l,ast_base* FLOAT);
extern ast_base* new_ast_Args_0(int l,ast_base* Exp,ast_base* COMMA,ast_base* Args);
extern ast_base* new_ast_Args_1(int l,ast_base* Exp);
#endif